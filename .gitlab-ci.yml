# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: python:latest
stages:
- Build
- Dynamic Application Security Testing
- Deploy
- test
services:
- docker:dind
build:
  image: docker:latest
  stage: Build
  script:
  - docker build -t ${CI_REGISTRY_USER}/simpleapp:latest .
  - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  - docker push ${CI_REGISTRY_USER}/simpleapp:latest
owasp:
  image: docker:latest
  stage: Dynamic Application Security Testing
  script:
  - echo 'hello!'
  - docker run -t owasp/zap2docker-stable zap-baseline.py -t ${URL2}
  allow_failure: true
deploy:
  image: ubuntu:latest
  stage: Deploy
  script:
  - echo "Building docker!"
  - apt-get update -qq
  - which ssh-agent || ( apt-get install -qq openssh-client )
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - echo "Deploy project on server"
  - ssh $DEPLOY_HOST "docker pull ${CI_REGISTRY_USER}/simpleapp:latest"
  - ssh $DEPLOY_HOST "docker stop app3"
  - ssh $DEPLOY_HOST "docker run --rm -d --name app3 -p $APP_PORT:$APP_PORT ${CI_REGISTRY_USER}/simpleapp:latest"
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
